= RDF Language Project

This is an academic project for Dr. Roger Eggen's Programming Languages Paradigms course at the University of North
Florida.  The assignment involved creating a language of our choosing.  This is the result.  While you are encouraged to
fork and use this project, it is unmaintained. We'll review pull requests but do not make any guarantees as to the
production suitability of this application.

The program generates a subset RDF/XML from a derived language, referred to as RDF/Osprey Notation.

== Authors
* Matt Walston  <mailto:m@mlw.ac>
* Jared Wheeler <mailto:jwheelcomp3@gmail.com>


== Background
RDF is a W3C standard for linked data on the semantic web. Specifications for RDF/XML, the output of this language,
are located at: http://www.w3.org/TR/REC-rdf-syntax/.  The W3C has a working validator available at
http://www.w3.org/RDF/Validator/

RDF is made of items and verbs which link the items together. Items are described within the RDF/XML with Description
tags, with nested verb tags which refer to other items. The specifications above are the authoratative standard to
RDF/XML. An abundance of other guides, tutorials and resources exist online and in print which relate to the practical
application, theory and construction of RDF.

XML was not designed for human readability. It's easy to parse by computer, but painful to edit complex documents by
manualy. Osprey Notation is designed with human readibility and writability as a primary design goal.  This utility
demonstrates an example compiler which accepts Osprey Notation and generates RDF/XML. The language implements
the most common RDF elements and offers a great deal of flexibility.

== Grammar
  S   -> A
  A	  -> N | D
  N   -> namespace id = U N	| empty
  D   -> U B D	| L B D	| G B D	| blank B D	| empty

  U	  -> ' literal '
  L   -> local id
  G   -> global id
  B   -> { IB }
  IB  -> NV DC IB	| empty

  NV  -> literal::literal

  DC  -> C	| D
  C	  -> U TM	| T
  TM  -> T	| empty
  T	  -> { VB }
  VB  -> " CL "	| D
  CL  -> literal CL	| empty

[S]  is the start state.
[A]  encompases the entire program.
[N]  is where all namespace declarations are going to take place.
[D]  is the start of a definition, determining if it will be referencing a preexisting item, a local definition, a global definition, or an unnamed node.
[U]  governs the URI references.
[L]  defines local rdf:nodeType name.
[G]  defines an rdf:ID name.
[B]  indicates the body of the defined resource, surrounded by brackets.
[IB] is the basic set up for a predicate.
[NV] is the structure of the namespace and predicate for use.
[DC] determines if a resource or a sub-defined local item will be connected by the predicate.
[C]  and TM allow the use of a URI for linking to external resource or for use as a rdf:dataType definition with literal data.
[T]  allows a further nesting of items within the predicate, indicated by brackets.
[VB] will determine if the nested item is a literal or an unnamed node declaration.
[CL] processes the literal data within the literal of a predicate.

==Language

local, global, and blank indicate the types of rdf:Description that should be generated.  Local corresponds to an rdf:nodeType; global to rdf:ID, and blank to an unnamed node.  namespace is a keyword to indicate the definition of a namespace.  The rdf namespace is provided by default.

literal indicates a string value; the literal within the U state is a valid URI, the literal in the CL state can be any data, the first literal in the NV state must be either rdf or correspond to a namespace which was defined at the start of the program; the second literal should be a predicate from that ontology.

Example inputs are located within the examples folder.

== System Requirements
* Ruby 1.9.3 or 2.0
* Ruby standard library, notably File, IO, Array and Hash
* Test suite requires minitest
* UNIX-like operating system suggested

== Usage
Run the rdfgen.rb through a ruby interpreter passing a single commandline argument containing the input file. Resulting
RDF/XML will be returned. View on console or redirect to file or application.


